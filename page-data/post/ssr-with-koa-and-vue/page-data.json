{"componentChunkName":"component---src-templates-post-tsx","path":"/post/ssr-with-koa-and-vue","result":{"data":{"markdownRemark":{"html":"<p>阅读此文前建议先阅读下官方提供的文档<a href=\"https://ssr.vuejs.org/zh/\">Vue SSR指南</a>，并对以下工具有一定了解。</p>\n<blockquote>\n<p> <a href=\"https://cli.vuejs.org/\">Vue CLI</a> — Vue脚手架，生成vue应用模板</p>\n<p> <a href=\"https://ssr.vuejs.org/zh/#%E4%BB%80%E4%B9%88%E6%98%AF%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E6%B8%B2%E6%9F%93-ssr-%EF%BC%9F\">Vue SSR指南</a>  — 官方SSR教程及工具使用教程</p>\n<p><a href=\"https://webpack.js.org/\">Webpack</a> — 前端构建工具</p>\n<p><a href=\"https://koajs.com/\">Koa</a>  — 基于nodejs开发的网络框架</p>\n</blockquote>\n<p><a href=\"https://github.com/kitwon/vue-ssr-boilerplate\">👉🏻完整项目地址</a></p>\n<h2>Why do this</h2>\n<p>现在社区有很多如<a href=\"https://zh.nuxtjs.org/\">Nuxt.js</a>等框架或者插件，为什么还需要自己开发一个呢。首先自己开发能对工程细节有更好的控制，自定义程度更高，比如我需要在路由里面做一个优化点，或者需要结合redis做组件缓存。其次自己搭建能对框架有着更深入的理解，出现问题也能从容应对。</p>\n<!-- more -->\n<h2>开始编码前</h2>\n<p>本文不会一步步讲如何重新搭建，只会挑取一些核心的地方进行分析，其他详情请自行查阅文档。</p>\n<p>开发前我们需要确认一下开发环境里需要包含的功能：</p>\n<ol>\n<li>使用Vue-cli3生成项目(可选)</li>\n<li>使用koa启动web服务</li>\n<li>启动web服务时需要同时watch server bundle和client bundle</li>\n<li>支持HMR(热更新)</li>\n</ol>\n<h2>🛠 配置Webpack</h2>\n<p>因为是选择vue-cli3创建应用，所以这里我们需要配置<code class=\"language-text\">vue.config.js</code>。⚠️ 由于我在开发的时候选择了<strong>TypeScript</strong>，所有相关的代码请各位自行跳过。</p>\n<p>配置Webpack有以下几点关键的地方:</p>\n<ul>\n<li>区分客户端和服务的构建环境</li>\n<li>删除SSR中不需要的插件</li>\n<li>构建服务端bundle时候需要单独设置cache-loader文件夹及缓存指纹。</li>\n</ul>\n<p>首先是删除插件，因为默认的webpack配置带有一些插件是ssr用不上的，如hmr和preload等，我们需要先删除。并且需要在配置文件中使用<a href=\"https://www.npmjs.com/package/cross-env\">cross-env</a>区分环境。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">chainWbpack</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">config</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// 区分环境</span>\n\t<span class=\"token keyword\">const</span> target <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">SSR_TARGET</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> isProd <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> isServer <span class=\"token operator\">=</span> target <span class=\"token operator\">===</span> <span class=\"token string\">'server'</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 删除不需要的插件</span>\n  config<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hmr'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  config<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token string\">'preload'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  config<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token string\">'prefetch'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  config<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token string\">'progress'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isProd<span class=\"token punctuation\">)</span> config<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token string\">'no-emit-on-errors'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// HTML</span>\n  <span class=\"token comment\">// 生存模式下关闭HTML压缩</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isProd<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    config<span class=\"token punctuation\">.</span><span class=\"token function\">plugin</span><span class=\"token punctuation\">(</span><span class=\"token string\">'html'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">tap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">args</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>minify<span class=\"token punctuation\">.</span>removeComments <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> args<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>然后继续在<code class=\"language-text\">vue.config.js</code>继续添加以下代码，分别对<strong>Server Bundle</strong>和<strong>Client Bundle</strong>构建进行配置</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">chainWbpack</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">config</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...other config</span>\n  <span class=\"token comment\">//</span>\n\t<span class=\"token comment\">// 根据构建环境区分webpack入口文件</span>\n\tconfig<span class=\"token punctuation\">.</span><span class=\"token function\">entry</span><span class=\"token punctuation\">(</span><span class=\"token string\">'app'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">./src/entry-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>target<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.ts</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isServer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 服务端bundle配置</span>\n    config<span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span><span class=\"token function\">libraryTarget</span><span class=\"token punctuation\">(</span><span class=\"token string\">'commonjs2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    config<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    config<span class=\"token punctuation\">.</span><span class=\"token function\">externals</span><span class=\"token punctuation\">(</span><span class=\"token function\">nodeExternals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> whitelist<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token regex\">/\\.css$/</span><span class=\"token punctuation\">,</span> <span class=\"token regex\">/\\?vue&amp;type=style/</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    config<span class=\"token punctuation\">.</span><span class=\"token function\">target</span><span class=\"token punctuation\">(</span><span class=\"token string\">'node'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    config<span class=\"token punctuation\">.</span>optimization<span class=\"token punctuation\">.</span><span class=\"token function\">splitChunks</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">minimize</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    config<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token string\">'friendly-errors'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    config<span class=\"token punctuation\">.</span><span class=\"token function\">plugin</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ssr-server'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>VueSSRServerPlugin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    config<span class=\"token punctuation\">.</span><span class=\"token function\">plugin</span><span class=\"token punctuation\">(</span><span class=\"token string\">'loader'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>WebpackBar<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Server'</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">:</span> <span class=\"token string\">'orange'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Change cache directory for server-side</span>\n    <span class=\"token comment\">// Server bundle 单独分离cache文件夹</span>\n    config<span class=\"token punctuation\">.</span>module<span class=\"token punctuation\">.</span><span class=\"token function\">rule</span><span class=\"token punctuation\">(</span><span class=\"token string\">'vue'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cache-loader'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">tap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">options</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      options<span class=\"token punctuation\">.</span>cacheIdentifier <span class=\"token operator\">+=</span> <span class=\"token string\">'-server'</span><span class=\"token punctuation\">;</span>\n      options<span class=\"token punctuation\">.</span>cacheDirectory <span class=\"token operator\">+=</span> <span class=\"token string\">'-server'</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> options<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    config<span class=\"token punctuation\">.</span>module<span class=\"token punctuation\">.</span><span class=\"token function\">rule</span><span class=\"token punctuation\">(</span><span class=\"token string\">'vue'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">'vue-loader'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">tap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">options</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      options<span class=\"token punctuation\">.</span>cacheIdentifier <span class=\"token operator\">+=</span> <span class=\"token string\">'-server'</span><span class=\"token punctuation\">;</span>\n      options<span class=\"token punctuation\">.</span>cacheDirectory <span class=\"token operator\">+=</span> <span class=\"token string\">'-server'</span><span class=\"token punctuation\">;</span>\n      options<span class=\"token punctuation\">.</span>optimizeSSR <span class=\"token operator\">=</span> isServer<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> options<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    config<span class=\"token punctuation\">.</span><span class=\"token function\">plugin</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ssr-client'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>VueSSRClientPlugin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    config<span class=\"token punctuation\">.</span><span class=\"token function\">plugin</span><span class=\"token punctuation\">(</span><span class=\"token string\">'loader'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>WebpackBar<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Client'</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">:</span> <span class=\"token string\">'green'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    config<span class=\"token punctuation\">.</span><span class=\"token function\">devtool</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isProd <span class=\"token operator\">?</span> <span class=\"token string\">'#cheap-module-source-map'</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    config<span class=\"token punctuation\">.</span>module<span class=\"token punctuation\">.</span><span class=\"token function\">rule</span><span class=\"token punctuation\">(</span><span class=\"token string\">'vue'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">'vue-loader'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">tap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">options</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      options<span class=\"token punctuation\">.</span>optimizeSSR <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> options<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>除Webpack配置外，入口部分代码配置请参照官方文档中的<a href=\"https://ssr.vuejs.org/zh/guide/universal.html\">编写通用代码</a>、<a href=\"https://ssr.vuejs.org/zh/guide/structure.html\">源码结构</a>、<a href=\"https://ssr.vuejs.org/zh/guide/routing.html\">路由和代码分割</a>、<a href=\"https://ssr.vuejs.org/zh/guide/data.html\">数据预取和状态</a>几章。</p>\n<h2>⚙️ Server配置</h2>\n<p>服务里核心代码主要有以下3个地方</p>\n<ul>\n<li><code class=\"language-text\">server/ssr.ts</code> —— 实例渲染方法及路由配置</li>\n<li><code class=\"language-text\">server/scripts/webpack.ts</code> —— 获取Webpack配置</li>\n<li><code class=\"language-text\">server/scripts/dev-server.ts</code> —— 开发环境下Webpack服务</li>\n</ul>\n<h3>渲染Vue实例</h3>\n<p>SSR中的实例渲染从<a href=\"https://ssr.vuejs.org/zh/guide/bundle-renderer.html\">官方文档中Bundle Renderer</a>可知，一个Bundle Renderer主要包含以下3部分</p>\n<ul>\n<li>Template —— 页面html模板</li>\n<li>Server bundle —— 服务端渲染核心资源</li>\n<li>Client manifest —— 客户端依赖资源</li>\n</ul>\n<p>但是由于有开发环境的加入，上方资源获取由原本的文件获取变成从webpack进程中获取，核心部分代码如下</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// server/ssr.ts</span>\n<span class=\"token comment\">// Wrap renderToString into the Promise</span>\n<span class=\"token comment\">// renderToString使用Promise封装</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">createRouter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">app</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// some code</span>\n  <span class=\"token comment\">//</span>\n  <span class=\"token comment\">// core 核心代码</span>\n  <span class=\"token keyword\">let</span> renderer<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isProd<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 生产模式下直接获取bundle并渲染</span>\n      <span class=\"token keyword\">const</span> template <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>ssr<span class=\"token punctuation\">.</span>template<span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> serverBundle <span class=\"token operator\">=</span> <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>ssr<span class=\"token punctuation\">.</span>server<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> clientManifest <span class=\"token operator\">=</span> <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>ssr<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      renderer <span class=\"token operator\">=</span> <span class=\"token function\">createBundleRenderer</span><span class=\"token punctuation\">(</span>serverBundle<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        template<span class=\"token punctuation\">,</span>\n        clientManifest\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 开发模式下从webpack中获取bundle</span>\n      <span class=\"token comment\">// setupDevServer返回Promise，onUpdate回调获取render</span>\n      readyPromise <span class=\"token operator\">=</span> <span class=\"token function\">setupDevServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        server<span class=\"token punctuation\">:</span> app<span class=\"token punctuation\">,</span>\n        templatePath<span class=\"token punctuation\">:</span> config<span class=\"token punctuation\">.</span>ssr<span class=\"token punctuation\">.</span>template<span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">onUpdate</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> serverBundle<span class=\"token punctuation\">,</span> options <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          renderer <span class=\"token operator\">=</span> <span class=\"token function\">createBundleRenderer</span><span class=\"token punctuation\">(</span>serverBundle<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Dev Server</h3>\n<p>从上方可知，DevServer中会暴露一个<code class=\"language-text\">function setupDevServer(options): Promise&lt;any&gt; {}</code>的方法，并在onUpdate回调中获取bundle。从<code class=\"language-text\">createBundleRenderer</code>的方法中知道我们需要启动两个 Webpack实例去构建bundle，从中推断出devServer中的功能应有以下几个：</p>\n<ol>\n<li>获取client和server的 Webpack配置</li>\n<li>服务中需要启动两个 Webpack实例，等待构建后resolve bundle files</li>\n<li>构建client bundle时候加入HMR</li>\n</ol>\n<p>获取Webpack配置只需通过修改两次环境变量并执行<code class=\"language-text\">service.resolveWebpackConfig</code>获取两份配置并暴露出去。API 请参考vue-service的源码，备注中有地址。</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// server/scripts/webpack.ts</span>\n<span class=\"token comment\">/* eslint import/no-extraneous-dependencies: 0 */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> join <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'path'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Refer to the source code from cli-service\n * https://github.com/vuejs/vue-cli/blob/dev/packages/%40vue/cli-service/lib/PluginAPI.js#L137\n */</span>\n<span class=\"token keyword\">const</span> Service <span class=\"token operator\">=</span> <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@vue/cli-service/lib/Service'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> service <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Service</span><span class=\"token punctuation\">(</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../..'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nservice<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">||</span> <span class=\"token string\">'development'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nprocess<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">SSR_TARGET</span> <span class=\"token operator\">=</span> <span class=\"token string\">'client'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> clientConfig <span class=\"token operator\">=</span> service<span class=\"token punctuation\">.</span><span class=\"token function\">resolveWebpackConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nprocess<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">SSR_TARGET</span> <span class=\"token operator\">=</span> <span class=\"token string\">'server'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> serverConfig <span class=\"token operator\">=</span> service<span class=\"token punctuation\">.</span><span class=\"token function\">resolveWebpackConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span>\n  clientConfig<span class=\"token punctuation\">,</span>\n  serverConfig\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>DevServer的逻辑也不复杂，里面主要有以下几个核心内容：</p>\n<ol>\n<li>setupDevServer返回一个Promise，构建完成时候resolve，router中需要根据这个状态返回结果。</li>\n<li>核心<code class=\"language-text\">update()</code>方法，当webpack构建成功时候执行这个回调方法，然后把构建生成的包返回出去</li>\n<li>client compiler中添加HMR热更新插件</li>\n<li>server compiler中把outputFileSystem修改为<strong>memory-fs</strong>，把构建的内容写入到内存里面</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// server/scripts/dev-server.ts</span>\n<span class=\"token comment\">//</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">setupDevServer</span><span class=\"token punctuation\">(</span>\n  <span class=\"token parameter\"><span class=\"token punctuation\">{</span> server<span class=\"token punctuation\">,</span> templatePath<span class=\"token punctuation\">,</span> onUpdate <span class=\"token punctuation\">}</span><span class=\"token punctuation\">:</span> DevOptions</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 1. 返回一个promise</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token comment\">//</span>\n    <span class=\"token comment\">// 2. 构建成功回调，resolve也在这一步完成 #53</span>\n    <span class=\"token comment\">// HMR update callback</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">update</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>serverBundle <span class=\"token operator\">&amp;&amp;</span> clientManifest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          serverBundle<span class=\"token punctuation\">,</span>\n          options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n            template<span class=\"token punctuation\">,</span>\n            clientManifest\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token comment\">// 3. 添加热更新插件，构建入口加上HMR的文件 #73</span>\n    clientConfig<span class=\"token punctuation\">.</span>entry<span class=\"token punctuation\">.</span>app <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'webpack-hot-middleware/client'</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>clientConfig<span class=\"token punctuation\">.</span>entry<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//</span>\n    <span class=\"token comment\">// 设置webpack开发中间件 #77</span>\n    <span class=\"token keyword\">const</span> clientCompiler <span class=\"token operator\">=</span> <span class=\"token function\">webpack</span><span class=\"token punctuation\">(</span>clientConfig<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> middleware <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">koaWebpack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      compiler<span class=\"token punctuation\">:</span> clientCompiler<span class=\"token punctuation\">,</span>\n      devMiddleware<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        publicPath<span class=\"token punctuation\">:</span> clientConfig<span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span>publicPath<span class=\"token punctuation\">,</span>\n        stats<span class=\"token punctuation\">:</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">,</span>\n        logLevel<span class=\"token punctuation\">:</span> <span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span>\n        index<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 添加热更新中间件 #120</span>\n    server<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">e2k</span><span class=\"token punctuation\">(</span><span class=\"token function\">webpackHotMiddleware</span><span class=\"token punctuation\">(</span>clientCompiler<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> heartbeat<span class=\"token punctuation\">:</span> <span class=\"token number\">5000</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token comment\">// 3. Server compiler outputFileSystem修改为memory-fs #125</span>\n    <span class=\"token keyword\">const</span> serverCompiler <span class=\"token operator\">=</span> <span class=\"token function\">webpack</span><span class=\"token punctuation\">(</span>serverConfig<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> serverMfs <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MFS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    serverCompiler<span class=\"token punctuation\">.</span>outputFileSystem <span class=\"token operator\">=</span> serverMfs<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>🖊Conclusion</h2>\n<p>通过对SSR dev开发环境的搭建能对服务端渲染的功能更为了解，但是更多的优化如critical css的提取，组件缓存等功能还需要优化，另外SSR是服务器密集型的功能，更多的优化点还是要结合业务和实战去实践的。</p>\n<p>希望这篇文章对你搭建SSR环境或者选型中有帮助。Thanks ❤️</p>","frontmatter":{"date":"July 27, 2019","path":"/post/ssr-with-koa-and-vue","title":"使用Koa + vue-cli3搭建SSR 开发环境","category":["前端"]},"headings":[{"depth":2,"value":"Why do this"},{"depth":2,"value":"开始编码前"},{"depth":2,"value":"🛠 配置Webpack"},{"depth":2,"value":"⚙️ Server配置"},{"depth":3,"value":"渲染Vue实例"},{"depth":3,"value":"Dev Server"},{"depth":2,"value":"🖊Conclusion"}],"tableOfContents":"<ul>\n<li><a href=\"/post/ssr-with-koa-and-vue/#why-do-this\">Why do this</a></li>\n<li><a href=\"/post/ssr-with-koa-and-vue/#%E5%BC%80%E5%A7%8B%E7%BC%96%E7%A0%81%E5%89%8D\">开始编码前</a></li>\n<li><a href=\"/post/ssr-with-koa-and-vue/#-%E9%85%8D%E7%BD%AEwebpack\">🛠 配置Webpack</a></li>\n<li>\n<p><a href=\"/post/ssr-with-koa-and-vue/#%EF%B8%8F-server%E9%85%8D%E7%BD%AE\">⚙️ Server配置</a></p>\n<ul>\n<li><a href=\"/post/ssr-with-koa-and-vue/#%E6%B8%B2%E6%9F%93vue%E5%AE%9E%E4%BE%8B\">渲染Vue实例</a></li>\n<li><a href=\"/post/ssr-with-koa-and-vue/#dev-server\">Dev Server</a></li>\n</ul>\n</li>\n<li><a href=\"/post/ssr-with-koa-and-vue/#conclusion\">🖊Conclusion</a></li>\n</ul>"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/post/ssr-with-koa-and-vue","next":{"frontmatter":{"title":"What's AST & How AST","date":"2019-05-25","category":["javascript"],"tags":["babel","AST"],"path":"/post/what-and-how-ast"}},"previous":{"frontmatter":{"title":"使用Webpack设计一个所有项目适用的分包配置","date":"2019-09-06","category":["前端"],"tags":["webpack","性能优化"],"path":"/post/webpack-bundle-design"}}}}}