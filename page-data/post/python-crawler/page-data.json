{"componentChunkName":"component---src-templates-post-tsx","path":"/post/python-crawler","result":{"data":{"markdownRemark":{"html":"<p>之前一直有学习python，但是一直都是在学一些比较基础的东西，所在在这段空闲的时间打算系统学一下python。在这会使用python写一个爬百科的简单爬虫，首先分析下爬虫的需求。</p>\n<h2>主要需求</h2>\n<p>这个demo中爬虫有3个主要模块，<strong>URL管理器</strong>、<strong>下载器</strong>、<strong>解析器</strong></p>\n<ul>\n<li>URL管理器主要处理爬取的URL的状态。</li>\n<li>下载器会通过<strong>URL管理器</strong>传送过来有效URL进行下载。</li>\n<li>解析器会将<strong>下载器</strong>下载的内容解析成字符串，再进行保存。如果解析出有效URL再传给<strong>URL管理器</strong>进行重复操作。</li>\n</ul>\n<h3>入口程序</h3>\n<p><code class=\"language-text\">spider_main</code>文件为程序入口，处理整个爬虫的运行逻辑</p>\n<!-- more -->\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> url_manager<span class=\"token punctuation\">,</span> html_downloader<span class=\"token punctuation\">,</span> html_outputer<span class=\"token punctuation\">,</span> html_parser\n<span class=\"token keyword\">import</span> sys\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SpiderMain</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    self<span class=\"token punctuation\">.</span>urls <span class=\"token operator\">=</span> url_manager<span class=\"token punctuation\">.</span>UrlManager<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    self<span class=\"token punctuation\">.</span>downloder <span class=\"token operator\">=</span> html_downloader<span class=\"token punctuation\">.</span>HtmlDownloader<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    self<span class=\"token punctuation\">.</span>parser <span class=\"token operator\">=</span> html_parser<span class=\"token punctuation\">.</span>HtmlParser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    self<span class=\"token punctuation\">.</span>outputer <span class=\"token operator\">=</span> html_outputer<span class=\"token punctuation\">.</span>HtmlOutputer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">def</span> <span class=\"token function\">crawl</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> root_url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    count <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    <span class=\"token comment\"># 初始化原始的爬取地址</span>\n    self<span class=\"token punctuation\">.</span>urls<span class=\"token punctuation\">.</span>add_new_ursl<span class=\"token punctuation\">(</span>root_url<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">while</span> self<span class=\"token punctuation\">.</span>urls<span class=\"token punctuation\">.</span>has_new_url<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        new_url <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>urls<span class=\"token punctuation\">.</span>get_new_url<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span> <span class=\"token string\">'crawl %d : %s'</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">,</span> new_url<span class=\"token punctuation\">)</span>\n        html_cont <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>downloder<span class=\"token punctuation\">.</span>download<span class=\"token punctuation\">(</span>new_url<span class=\"token punctuation\">)</span>\n        new_urls<span class=\"token punctuation\">,</span> new_data <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>parser<span class=\"token punctuation\">.</span>parse<span class=\"token punctuation\">(</span>new_url<span class=\"token punctuation\">,</span> html_cont<span class=\"token punctuation\">)</span>\n\n        self<span class=\"token punctuation\">.</span>urls<span class=\"token punctuation\">.</span>add_new_urls<span class=\"token punctuation\">(</span>new_urls<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>outputer<span class=\"token punctuation\">.</span>collect_data<span class=\"token punctuation\">(</span>new_data<span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 爬取的数据到1000条时跳出循环</span>\n        <span class=\"token keyword\">if</span> count <span class=\"token operator\">==</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">:</span>\n          <span class=\"token keyword\">break</span>\n\n        count <span class=\"token operator\">=</span> count <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n      <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 使用sys抛出其他函数错误</span>\n        info<span class=\"token operator\">=</span>sys<span class=\"token punctuation\">.</span>exc_info<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span> info<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span>info<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\n        <span class=\"token keyword\">print</span> <span class=\"token string\">'crawl failed'</span>\n\n    <span class=\"token comment\"># 将爬取的数据组装</span>\n    self<span class=\"token punctuation\">.</span>outputer<span class=\"token punctuation\">.</span>output_html<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n  root_url <span class=\"token operator\">=</span> <span class=\"token string\">'https://baike.baidu.com/item/Python'</span>\n  obj_spider <span class=\"token operator\">=</span> SpiderMain<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  obj_spider<span class=\"token punctuation\">.</span>crawl<span class=\"token punctuation\">(</span>root_url<span class=\"token punctuation\">)</span></code></pre></div>\n<h2>url管理器</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># url_manager.py</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UrlManager</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    self<span class=\"token punctuation\">.</span>new_urls <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    self<span class=\"token punctuation\">.</span>old_urls <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\"># 添加一条新的url</span>\n  <span class=\"token keyword\">def</span> <span class=\"token function\">add_new_url</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> url <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">return</span>\n\n    <span class=\"token keyword\">if</span> url <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>new_urls <span class=\"token keyword\">and</span> url <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>old_urls<span class=\"token punctuation\">:</span>\n      self<span class=\"token punctuation\">.</span>new_urls<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\"># 添加多条url</span>\n  <span class=\"token keyword\">def</span> <span class=\"token function\">add_new_urls</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> urls<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> urls <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span> <span class=\"token keyword\">and</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>urls<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">return</span>\n\n    <span class=\"token keyword\">for</span> url <span class=\"token keyword\">in</span> urls<span class=\"token punctuation\">:</span>\n      self<span class=\"token punctuation\">.</span>add_new_url<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\"># 是否有代爬取地址</span>\n  <span class=\"token keyword\">def</span> <span class=\"token function\">has_new_url</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>new_urls<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span>\n\n  <span class=\"token comment\"># 返回一条新的url</span>\n  <span class=\"token keyword\">def</span> <span class=\"token function\">get_new_url</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    new_url <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>new_urls<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    self<span class=\"token punctuation\">.</span>old_urls<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>new_url<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> new_url</code></pre></div>\n<h3>下载器</h3>\n<p>下载器使用自带的<a href=\"https://docs.python.org/2/library/urllib2.html\">urllib2</a>库处理请求</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># html_downloader.py</span>\n<span class=\"token keyword\">import</span> urllib2\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">HtmlDownloader</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">def</span> <span class=\"token function\">download</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> url <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">return</span>\n\n    <span class=\"token comment\"># 这里设置一下超时，不然网络会使程序运行出现停止</span>\n    response <span class=\"token operator\">=</span> urllib2<span class=\"token punctuation\">.</span>urlopen<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> timeout <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 请求失败时候跳出程序</span>\n    <span class=\"token keyword\">if</span> response<span class=\"token punctuation\">.</span>getcode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span>\n\n    <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>解析器</h3>\n<p>解析器分为两部分，一个解析，一个输出，首先看看解析模块。</p>\n<p>解析html我们使用了<a href=\"https://www.crummy.com/software/BeautifulSoup/bs4/doc/index.zh.html\">beautifulsoup</a>，解析后可以使用库提供的方法做DOM操作，获取有用的信息</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># html_parser.py</span>\n<span class=\"token keyword\">from</span> bs4 <span class=\"token keyword\">import</span> BeautifulSoup\n<span class=\"token keyword\">import</span> re\n<span class=\"token keyword\">import</span> urlparse\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">HtmlParser</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">def</span> <span class=\"token function\">_get_new_urls</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> page_url<span class=\"token punctuation\">,</span> soup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    new_urls <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 获取a标签中所有匹配的url地址</span>\n    links <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> href<span class=\"token operator\">=</span>re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'/item/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> link <span class=\"token keyword\">in</span> links<span class=\"token punctuation\">:</span>\n      new_url <span class=\"token operator\">=</span> link<span class=\"token punctuation\">[</span><span class=\"token string\">'href'</span><span class=\"token punctuation\">]</span>\n      new_full_url <span class=\"token operator\">=</span> urlparse<span class=\"token punctuation\">.</span>urljoin<span class=\"token punctuation\">(</span>page_url<span class=\"token punctuation\">,</span> new_url<span class=\"token punctuation\">)</span>\n      new_urls<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>new_full_url<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> new_urls\n\n  <span class=\"token keyword\">def</span> <span class=\"token function\">_get_new_data</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> page_url<span class=\"token punctuation\">,</span> soup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    res_data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\"># 获取页面相关内容</span>\n    res_data<span class=\"token punctuation\">[</span><span class=\"token string\">'url'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> page_url\n\n    <span class=\"token comment\"># &lt;dd class=\"lemmaWgt-lemmaTitle-title\"> &lt;h1>Python&lt;/h1></span>\n    title_node <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'dd'</span><span class=\"token punctuation\">,</span> class_<span class=\"token operator\">=</span><span class=\"token string\">'lemmaWgt-lemmaTitle-title'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'h1'</span><span class=\"token punctuation\">)</span>\n    res_data<span class=\"token punctuation\">[</span><span class=\"token string\">'title'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> title_node<span class=\"token punctuation\">.</span>get_text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># &lt;div class=\"lemma-summary\" label-module=\"lemmaSummary\"></span>\n    summary_node <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span> class_<span class=\"token operator\">=</span><span class=\"token string\">'lemma-summary'</span><span class=\"token punctuation\">)</span>\n    res_data<span class=\"token punctuation\">[</span><span class=\"token string\">'summary'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> summary_node<span class=\"token punctuation\">.</span>get_text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> res_data\n\n  <span class=\"token keyword\">def</span> <span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> page_url<span class=\"token punctuation\">,</span> html_cont<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> page_url <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span> <span class=\"token keyword\">or</span> html_cont <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">return</span>\n\n    soup <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span>html_cont<span class=\"token punctuation\">,</span> <span class=\"token string\">'html.parser'</span><span class=\"token punctuation\">,</span> from_encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span>\n    new_urls <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_get_new_urls<span class=\"token punctuation\">(</span>page_url<span class=\"token punctuation\">,</span> soup<span class=\"token punctuation\">)</span>\n    new_data <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_get_new_data<span class=\"token punctuation\">(</span>page_url<span class=\"token punctuation\">,</span> soup<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> new_urls<span class=\"token punctuation\">,</span> new_data</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># html_outputer.py</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">HtmlOutputer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    self<span class=\"token punctuation\">.</span>datas <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n  <span class=\"token comment\"># 获取到的页面内容对象push到数组中</span>\n  <span class=\"token keyword\">def</span> <span class=\"token function\">collect_data</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> data <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">return</span>\n\n    self<span class=\"token punctuation\">.</span>datas<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\"># 将数组循环拼接，写入html文件中</span>\n  <span class=\"token keyword\">def</span> <span class=\"token function\">output_html</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    fout <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'output.html'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span>\n\n    fout<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;html>'</span><span class=\"token punctuation\">)</span>\n    fout<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;body>'</span><span class=\"token punctuation\">)</span>\n    fout<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;table>'</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> data <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>datas<span class=\"token punctuation\">:</span>\n      fout<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;tr>'</span><span class=\"token punctuation\">)</span>\n      fout<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;td>%s&lt;/td>'</span><span class=\"token operator\">%</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'url'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n      fout<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;td>%s&lt;/td>'</span><span class=\"token operator\">%</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'title'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      fout<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;td>%s&lt;/td>'</span><span class=\"token operator\">%</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'summary'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      fout<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;/tr>'</span><span class=\"token punctuation\">)</span>\n\n    fout<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;/html>'</span><span class=\"token punctuation\">)</span>\n    fout<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;/body>'</span><span class=\"token punctuation\">)</span>\n    fout<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;/table>'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2>总结</h2>\n<p>短短几行代码就实现了一个简单的爬虫，足以体现python的简单易用。学习python主要是想了解一下机器学习，后面会看一些书籍和资料，应该会再记录，但是后面估计会先写完深度学习javascript系列先。</p>","frontmatter":{"date":"June 11, 2017","path":"/post/python-crawler","title":"用python写一个简单爬虫","category":["python"]},"headings":[{"depth":2,"value":"主要需求"},{"depth":3,"value":"入口程序"},{"depth":2,"value":"url管理器"},{"depth":3,"value":"下载器"},{"depth":3,"value":"解析器"},{"depth":2,"value":"总结"}],"tableOfContents":"<ul>\n<li>\n<p><a href=\"/post/python-crawler/#%E4%B8%BB%E8%A6%81%E9%9C%80%E6%B1%82\">主要需求</a></p>\n<ul>\n<li><a href=\"/post/python-crawler/#%E5%85%A5%E5%8F%A3%E7%A8%8B%E5%BA%8F\">入口程序</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/post/python-crawler/#url%E7%AE%A1%E7%90%86%E5%99%A8\">url管理器</a></p>\n<ul>\n<li><a href=\"/post/python-crawler/#%E4%B8%8B%E8%BD%BD%E5%99%A8\">下载器</a></li>\n<li><a href=\"/post/python-crawler/#%E8%A7%A3%E6%9E%90%E5%99%A8\">解析器</a></li>\n</ul>\n</li>\n<li><a href=\"/post/python-crawler/#%E6%80%BB%E7%BB%93\">总结</a></li>\n</ul>"}},"pageContext":{"slug":"/post/python-crawler","next":{"frontmatter":{"title":"深入学习javascript--作用域","date":"2017-05-31","category":["前端"],"tags":null,"path":"/post/js-scope"}},"previous":{"frontmatter":{"title":"深入学习javascript-闭包","date":"2017-06-14","category":["前端"],"tags":null,"path":"/post/js-closures"}}}}}